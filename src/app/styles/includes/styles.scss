// ""!default"" - guarded assignment. In this case, the constant is only set if it does not already have a value
$color-success: black !default;
$color-warning: #FFA000 !default;
$color-primary: #2196F3 !default;
$color-danger: #E53935 !default;
$color-disabled: #EAEAEA !default;

body, input {
    font-size: 15px;
}

a {
	text-decoration: none;
}

.md-button {

	&:not(.md-mini):not(.md-icon-button) {
		padding-left: 10px;
		padding-right: 10px;
	}
}

.md-button.disabled,
.md-button[disabled],
.md-button.disabled:hover,
.md-button[disabled]:hover {
    background: $color-disabled;
    color: #A8A8A8;
    opacity: 1;
}

md-dialog-actions .md-button.md-button-primary {

	background: transparent;
	box-shadow: none;

	&:active, &:focus, & {
	    background: transparent;
	    color: $color-primary;
	}

	&:hover {
	    background: rgba(158,158,158,0.2);
	    opacity: 1;
	}
}

.md-datepicker-calendar-pane.md-pane-open {

    .md-datepicker-input-mask {
        display: none;
    }
}

md-datepicker-container {
    font-size: 15px;
    display: inline-block;
    position: relative;

    padding: 2px 2px 20px;
    margin: 18px 0 0;
    vertical-align: middle;
    min-height: 54px;

    .md-datepicker-button {
    	display: none;
    }

    &[flex],
    &[class~="flex"]
    &[class|="flex"] {
        // because flex changes its display from block to flex and its box-sizing from content-box to border-box
        min-height: 76px;
        max-height: 0;
    }

    &.md-block {
        display: block;

        md-datepicker {
            padding-right: 0;
            margin-right: 0;
        }

        .md-datepicker-input-container {
            display: block;
        }

        .md-datepicker-input {
            min-width: 90px;
            max-width: none;
            width: 100%;
        }
    }

    md-datepicker {
        display: block;

        &.md-datepicker-open {
            .md-datepicker-input-container {
                margin-left: 0;
                border-bottom: 1px solid;
                border-bottom-color: rgba(0, 0, 0, 0.11);
            }

            .md-datepicker-input {
                margin-left: 0;
                height: auto;
            }
        }
    }

    label {
        position: absolute;
	    bottom: 100%;
	    left: 0;
	    right: auto;
	    padding-left: 6px;
        pointer-events: none;
    }

    &[class*="ng-"] {

        label {
            order: 1;
            z-index: 1;
            transform: translate3d(0, 28px, 0) scale(1);
            color: rgba(0, 0, 0, 0.26);
        }
    }

    // ng-not-empty - denotes 'the view contains a non-empty value'
    // ng-empty     - denotes 'the view does not contain a value or the value is deemed "empty", as defined'
    &.md-datepicker-focused,
    &.md-input-has-placeholder,
    &.ng-invalid-valid-add,
    &.ng-not-empty-add,
    &.ng-not-empty,
    &.ng-empty.ng-invalid-valid {

        label {
            margin-top: 0;
        }
    }

    // If we have an existing value; don't animate the transform as it happens on page load and
    // causes erratic/unnecessary animation
    &.ng-not-empty {

        label {
            transition: none;
        }

        &.md-datepicker-open {

            label {
                color: rgba(0, 0, 0, 0.26);
                transform: translate3d(0, 28px, 0) scale(1);
            }
        }
    }

    &.md-datepicker-focused {

        &.ng-empty {
            label {
                color: #106CC8;

                md-icon.material-icons {
                    color: #106CC8;
                }
            }

            &.ng-invalid {
                &.ng-touched,
                &.ng-invalid-valid  {
                    label {
                        color: rgb(221, 44, 0);

                        md-icon.material-icons {
                            color: rgba(0, 0, 0, 0.54);
                        }
                    }
                }
            }
        }

        &.ng-not-empty.ng-invalid {
            label {
                color: rgb(221, 44, 0);
            }
        }
    }
}

md-text-container {
	display: block;
	.text {
	    height: 28px;
	    line-height: 28px;
	}
}

md-text-container,
md-checkbox-container,
md-radiobutton-container,
.fs-input-container {

	margin-bottom: 29px;
	margin-top: 0px;
	display: inline-block;

	&.md-block {
		display: block;
	}

	md-checkbox,
	md-radio-button {
		margin-bottom: 0;
		line-height: 26px;
		height: 26px;
	}

	label {
	    -webkit-transform: translate3d(0, 0px, 0) scale(0.75);
	    transform: translate3d(0, 0px, 0) scale(0.75);
	    transform-origin: left;
	    display: block;
	}
}

md-text-container {
	&.md-no-message {
		margin-bottom: 0;
	}
}

md-checkbox-container.md-vertical md-checkbox {
	display: block;
    clear: both;
}

md-checkbox-container.md-vertical:after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}


.md-checkbox-enabled[selected] .md-icon:after {
    border-color: rgba(255,255,255,0.87);
}

md-radiobutton-container.md-horizontal {
	md-radio-button {
		margin-right: 16px;
		display: inline;
	}
}


fs-heading {
    color: #272727;
    font-size: 20px;
    display: block;
    vertical-align: middle;
    position: relative;
    line-height: 25px;
    margin-bottom: 10px;
}

fs-heading fs-heading-actions {
    position: absolute;
    right: 0;
}

fs-heading fs-heading-actions .md-button {
    margin: 0;
}

fs-heading fs-heading-subheading,
fs-heading fs-heading-subheading * {
	font-size: 13px;
    line-height: 17px;
    color: #959595;
}

fs-heading fs-heading-subheading {
	margin-top: 4px;
    padding-bottom: 8px;
   	display: block;
}

md-dialog {

	md-toolbar {
		background-color: #fff !important;
		color: #222 !important;
	}

	&:not(.fs-modal-prompt):not(.fs-modal-confirm) .md-dialog-content {
		padding: 0px 20px;
	}

	.md-toolbar-tools .super,
	.md-toolbar-tools .sub {
		font-size: 13px;
	}

	max-width: 1100px;
}

hr {
    border: 1px solid #D0D0D0;
    border-bottom: 0;
}

md-input-container {
    box-sizing: content-box;
    margin: 18px 0 0;
    padding: 2px 2px 20px;
    min-height: 54px;
    vertical-align: middle;

    &[flex],
    &[class~="flex"]
    &[class|="flex"] {
        // because flex changes its display from block to flex and its box-sizing from content-box to border-box
        min-height: 76px;
    }

    // icon offset should have higher priority as normal label
    &.md-has-icon {
        padding-left: 2px;

        > label {
            left: 0px;
        }
    }

    &.md-icon-left {
        padding-left: 28px;
        padding-right: 2px;

        > label {
            left: 27px;
        }
    }

    &.md-icon-right {
        padding-left: 2px;
    }

    > md-icon {
        color: rgba(0,0,0,0.57);
    }

    textarea.md-input {
        font-size: 16px;
        line-height: 20px;
        padding-top: 4px;
        height: 30px;
        min-height: 30px;
    }

    /*
     * The .md-input class is added to the input/textarea
     */
    .md-input {
        margin-top: 1px;
        line-height: 26px;
        height: 30px;
        -ms-flex-preferred-size: 26px;
        padding-top: 0px;
        padding-bottom: 1px;
    }

    .md-input[disabled],
    [disabled] & .md-input {
       margin-top: 2px;
    }

    label, .md-placeholder {
        color: rgba(0, 0, 0, 0.26);
    }

    label {
        padding-left: 2px;

        &:not(.md-no-float):not(.md-container-ignore) {
            padding-left: 2px;
        }
    }

    &.md-input-focused,
    &.md-input-has-value,
    &.md-input-has-placeholder{
        label, label:not(.md-no-float):not(.md-container-ignore) {
            margin-top: 0;
        }
    }


    &:not(.md-input-invalid) {

        &.md-input-has-value {
            md-icon {
                color: rgba(0, 0, 0, 0.54);
            }
        }
    }

    .md-errors-spacer {
        min-height: 23px;
    }

    .md-char-counter {
        font-size: 12px;
        line-height: 14px;
        padding-top: 5px;
    }

    ng-messages .md-char-counter,
    [ng-messages] .md-char-counter,
    ng-message .md-char-counter,
    data-ng-message .md-char-counter,
    x-ng-message .md-char-counter,
    [ng-message] .md-char-counter,
    [data-ng-message] .md-char-counter,
    [x-ng-message] .md-char-counter,
    [ng-message-exp] .md-char-counter,
    [data-ng-message-exp] .md-char-counter,
    [x-ng-message-exp] .md-char-counter {
        font-size: 12px;
        line-height: 14px;
        padding-top: 5px;
    }

    md-select {
        min-width: 80px;

        &:not([disabled]):focus {
            .md-select-value {
                padding-bottom: 1px;
            }
        }

        .md-select-value {
            padding-top: 2px;
            padding-bottom: 2px;

            .md-select-icon {
                margin-top: 2px;

                &:after {
                    font-size: 16px;
                }
            }

            .md-container {
                display: inline;

                .md-icon {
                    display: inline;
                }
            }
        }
    }
}

md-input-container,
md-text-container,
md-datepicker-container,
md-checkbox-container,
md-radiobutton-container,
.fs-input-container {

    .hint {
        font-size: 12px;
        line-height: 14px;

        padding-left: 2px;
        padding-top: 5px;

        position: relative;
        overflow: hidden;
		clear: left;
    }

    ng-messages,
    [ng-messages] {
        position: relative;
        display: block;

        color: rgb(221, 44, 0);
        font-size: 12px;
        line-height: 14px;

        padding-left: 2px;
        padding-top: 0;
    }

    ng-message,
    data-ng-message,
    x-ng-message,
    [ng-message],
    [data-ng-message],
    [x-ng-message],
    [ng-message-exp],
    [data-ng-message-exp],
    [x-ng-message-exp] {
        display: block;
        font-size: 12px;
        line-height: 14px;
        padding-top: 5px;
    }

    form[fs-validate] & {
        ng-messages {
            position: relative;
        }
    }

    &.md-input-invalid {
        .hint {
            display: none;
        }
    }

    & {
        md-datepicker.ng-invalid.ng-touched ~ .hint {
            display: none;
        }
    }
}

md-autocomplete-container {

	&[md-no-clear] button {
		display: none;
	}

    md-autocomplete-wrap {
    	height: auto;
        box-shadow: none !important;
    }

	md-autocomplete {

		height: auto;

		input:not(.md-input) {
			padding: 0 2px;
	       	margin: 1px 0;
	       	height: 30px;
	       	font-size: inherit;
	       	color: rgba(0,0,0,0.87);
		}

		button {
		    position: absolute;
		    right: 0;
		    margin: 0;
		}

		&[md-floating-label] {
			border: 0;
		}

		&:not([md-floating-label]) {
			input {
    			border-bottom: 1px solid rgb(225, 225, 225);

    			&:focus {
				    border-width: 2px;
				    margin-bottom: 0px;
				    height: 31px;
    			}
			}
		}
	}
}

.md-open-menu-container,
.md-select-menu-container {
    transition-duration: 0ms !important;
}

.md-open-menu-container > md-menu-content > *,
.md-select-menu-container md-select-menu > * {
    transition-duration: 10ms !important;
    transition-delay: 5ms !important;
}

md-toast {
    position: fixed;
}

md-input-container,
md-datepicker-container {

    &.md-no-label {
        margin-top: 0;

        &.md-input-has-value label,
        &.md-input-focused label {
            display: none;
        }
    }

    &.md-no-message,
    &.md-no-hints-errors {
        min-height: 0;
        margin-bottom: 0;
        padding-bottom: 2px;

        .md-errors-spacer, .hint {
            display: none;
        }

        .md-select-value {
            box-sizing: border-box;
            min-height: 31px;
        }
    }
}

md-autocomplete[md-floating-label] {
    md-input-container {
        min-height: inherit;
        padding-bottom: 2px;
        margin: 18px 0;
    }
}

md-input-container {
    &.md-has-icon {
        padding-left: 2px;
        padding-right: 2px;

        > label {
            left: 0;
        }
    }

    td &:after {
        content: '';
        display: initial;
        clear: both;
    }
}

label,
.label {

    line-height: 21px;
    md-icon,
    md-icon.material-icons {
        font-size: 20px;
        height: 20px;
        width: 20px;
    }

	display: block;
    transform: translate3d(0, 7px, 0) scale(0.75);
    transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;
    transform-origin: left top;
    color: rgba(0, 0, 0, 0.54);
}

/* Removes floating label zooming on page loads */
md-input-container.md-input-has-value label {
    transition-duration: 0s !important;
}
